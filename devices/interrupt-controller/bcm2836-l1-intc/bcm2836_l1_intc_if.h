#ifndef _BCM2836_L1_INTC_IF_H_
#define _BCM2836_L1_INTC_IF_H_

#include <sys/types.h>

#define MMIO_READ_32(base, reg)                            (*((uint32_t*)((base) + (reg))))
#define MMIO_READ_64(base, reg)                            (*((uint64_t*)((base) + (reg))))
#define MMIO_WRITE_32(base, reg, val)                      (*((uint32_t*)((base) + (reg))) = (val))
#define MMIO_WRITE_64(base, reg, val)                      (*((uint64_t*)((base) + (reg))) = (val))

#define INTC_ARMCTRL_IRQ_BASIC_PENDING                     (0x00)
#define intc_armctrl_irq_basic_pending_read(b)             (MMIO_READ_32(b, INTC_ARMCTRL_IRQ_BASIC_PENDING))

#define INTC_ARMCTRL_IRQ_PENDING1                          (0x04)
#define intc_armctrl_irq_pending1_read(b)                  (MMIO_READ_32(b, INTC_ARMCTRL_IRQ_PENDING1))

#define INTC_ARMCTRL_IRQ_PENDING2                          (0x08)
#define intc_armctrl_irq_pending2_read(b)                  (MMIO_READ_32(b, INTC_ARMCTRL_IRQ_PENDING2))

#define INTC_ARMCTRL_FIQ                                   (0x0C)
#define intc_armctrl_fiq_read(b)                           (MMIO_READ_32(b, INTC_ARMCTRL_FIQ))
#define intc_armctrl_fiq_write(b, r)                       (MMIO_READ_32(b, INTC_ARMCTRL_FIQ, r))

#define INTC_ARMCTRL_INTERRUPT_ENABLE1                     (0x10)
#define intc_armctrl_interrupt_enable1_read(b)             (MMIO_READ_32(b, INTC_ARMCTRL_INTERRUPT_ENABLE1))
#define intc_armctrl_interrupt_enable1_write(b, r)         (MMIO_WRITE_32(b, INTC_ARMCTRL_INTERRUPT_ENABLE1, r))

#define INTC_ARMCTRL_INTERRUPT_ENABLE2                     (0x14)
#define intc_armctrl_interrupt_enable2_read(b)             (MMIO_READ_32(b, INTC_ARMCTRL_INTERRUPT_ENABLE2))
#define intc_armctrl_interrupt_enable2_write(b, r)         (MMIO_WRITE_32(b, INTC_ARMCTRL_INTERRUPT_ENABLE2, r))

#define INTC_ARMCTRL_BASE_INTERRUPT_ENABLE                 (0x18)
#define intc_armctrl_base_interrupt_enable_read(b)         (MMIO_READ_32(b, INTC_ARMCTRL_BASE_INTERRUPT_ENABLE))
#define intc_armctrl_base_interrupt_enable_write(b, r)     (MMIO_WRITE_32(b, INTC_ARMCTRL_BASE_INTERRUPT_ENABLE, r))

#define INTC_ARMCTRL_INTERRUPT_DISABLE1                    (0x10)
#define intc_armctrl_interrupt_disable1_read(b)            (MMIO_READ_32(b, INTC_ARMCTRL_INTERRUPT_DISABLE1))
#define intc_armctrl_interrupt_disable1_write(b, r)        (MMIO_WRITE_32(b, INTC_ARMCTRL_INTERRUPT_DISABLE1, r))

#define INTC_ARMCTRL_INTERRUPT_DISABLE2                    (0x14)
#define intc_armctrl_interrupt_disable2_read(b)            (MMIO_READ_32(b, INTC_ARMCTRL_INTERRUPT_DISABLE2))
#define intc_armctrl_interrupt_disable2_write(b, r)        (MMIO_WRITE_32(b, INTC_ARMCTRL_INTERRUPT_DISABLE2, r))

#define INTC_ARMCTRL_BASE_INTERRUPT_DISABLE                (0x18)
#define intc_armctrl_base_interrupt_disable_read(b)        (MMIO_READ_32(b, INTC_ARMCTRL_BASE_INTERRUPT_DISABLE))
#define intc_armctrl_base_interrupt_disable_write(b, r)    (MMIO_WRITE_32(b, INTC_ARMCTRL_BASE_INTERRUPT_DISABLE, r))

#define INTC_CONTROL                                       (0x00)
#define G_INTC_CONTROL_TIMER_INCREMENTS(r)                 (((r) >> 9) & 1)
#define G_INTC_CONTROL_TIMER_CLOCK_SOURCE(r)               (((r) >> 8) & 1)
#define S_INTC_CONTROL_TIMER_INCREMENTS                    (1 << 9)
#define S_INTC_CONTROL_TIMER_CLOCK_SOURCE                  (1 << 8)
#define intc_control_read(b)                               (MMIO_READ_32(b, INTC_CONTROL))
#define intc_control_write(b, r)                           (MMIO_WRITE_32(b, INTC_CONTROL, r))

#define INTC_CORE_TIMER_PRESCALER                          (0x08)
#define intc_core_timer_prescaler_read(b)                  (MMIO_READ_32(b, INTC_CORE_TIMER_PRESCALER))
#define intc_core_timer_prescaler_write(b, r)              (MMIO_WRITE_32(b, INTC_CORE_TIMER_PRESCALER, r))

#define INTC_GPU_INT_ROUTING                               (0x0C)
#define G_INTC_GPU_INT_ROUTING_FIQ_ROUTING(r)              (((r) >> 2) & 3)
#define G_INTC_GPU_INT_ROUTING_IRQ_ROUTING(r)              ((r) & 3)
#define F_INTC_GPU_INT_ROUTING_FIQ_ROUTING(f)              (((f) & 3) << 2)
#define F_INTC_GPU_INT_ROUTING_IRQ_ROUTING(f)              ((f) & 3)
#define intc_gpu_int_routing_read(b)                       (MMIO_READ_32(b, INTC_GPU_INT_ROUTING))
#define intc_gpu_int_routing_write(b, r)                   (MMIO_WRITE_32(b, INTC_GPU_INT_ROUTING, r))

#define INTC_PMU_INT_ROUTING_SET                           (0x10)
#define G_INTC_PMU_INT_ROUTING_SET_PMU3_FIQ(r)             (((r) >> 7) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU2_FIQ(r)             (((r) >> 6) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU1_FIQ(r)             (((r) >> 5) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU0_FIQ(r)             (((r) >> 4) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU3_IRQ(r)             (((r) >> 3) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU2_IRQ(r)             (((r) >> 2) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU1_IRQ(r)             (((r) >> 1) & 1)
#define G_INTC_PMU_INT_ROUTING_SET_PMU0_IRQ(r)             ((r) & 1)
#define S_INTC_PMU_INT_ROUTING_SET_PMU3_FIQ                (1 << 7)
#define S_INTC_PMU_INT_ROUTING_SET_PMU2_FIQ                (1 << 6)
#define S_INTC_PMU_INT_ROUTING_SET_PMU1_FIQ                (1 << 5)
#define S_INTC_PMU_INT_ROUTING_SET_PMU0_FIQ                (1 << 4)
#define S_INTC_PMU_INT_ROUTING_SET_PMU3_IRQ                (1 << 3)
#define S_INTC_PMU_INT_ROUTING_SET_PMU2_IRQ                (1 << 2)
#define S_INTC_PMU_INT_ROUTING_SET_PMU1_IRQ                (1 << 1)
#define S_INTC_PMU_INT_ROUTING_SET_PMU0_IRQ                (1)
#define intc_pmu_int_routing_set_write(b, r)               (MMIO_WRITE_32(b, INTC_PMU_INT_ROUTING_SET, r))

#define INTC_PMU_INT_ROUTING_CLR                           (0x14)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU3_FIQ(r)             (((r) >> 7) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU2_FIQ(r)             (((r) >> 6) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU1_FIQ(r)             (((r) >> 5) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU0_FIQ(r)             (((r) >> 4) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU3_IRQ(r)             (((r) >> 3) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU2_IRQ(r)             (((r) >> 2) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU1_IRQ(r)             (((r) >> 1) & 1)
#define G_INTC_PMU_INT_ROUTING_CLR_PMU0_IRQ(r)             ((r) & 1)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU3_FIQ                (1 << 7)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU2_FIQ                (1 << 6)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU1_FIQ                (1 << 5)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU0_FIQ                (1 << 4)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU3_IRQ                (1 << 3)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU2_IRQ                (1 << 2)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU1_IRQ                (1 << 1)
#define S_INTC_PMU_INT_ROUTING_CLR_PMU0_IRQ                (1)
#define intc_pmu_int_routing_clr_read(b)                   (MMIO_READ_32(b, INTC_PMU_INT_ROUTING_CLR))
#define intc_pmu_int_routing_clr_write(b, r)               (MMIO_WRITE_32(b, INTC_PMU_INT_ROUTING_CLR, r))

#define INTC_CORE_TIMER_LS32                               (0x1C)
#define intc_core_timer_ls32_read(b)                       (MMIO_READ_32(b, INTC_CORE_TIMER_LS32))

#define INTC_CORE_TIMER_MS32                               (0x20)
#define intc_core_timer_ms32_read(b)                       (MMIO_READ_32(b, INTC_CORE_TIMER_MS32))

#define INTC_AXI_COUNTERS                                  (0x2C)
#define G_INTC_AXI_COUNTERS_OUTSTANDING_WRITES(r)          (((r) >> 16) & 3)
#define G_INTC_AXI_COUNTERS_OUTSTANDING_READS(r)           ((r) & 0x3ff)
#define intc_axi_counters_read(b)                          (MMIO_READ_32(b, INTC_AXI_COUNTERS))

#define INTC_AXI_INTERRUPTS                                (0x30)
#define G_INTC_AXI_INTERRUPTS_ENABLE(r)                    (((r) >> 20) & 1)
#define G_INTC_AXI_INTERRUPTS_TIMEOUT(r)                   ((r) & 0xfffff)
#define S_INTC_AXI_INTERRUPTS_ENABLE                       (1 << 20)
#define F_INTC_AXI_INTERRUPTS_TIMEOUT(f)                   ((f) & 0xfffff)
#define intc_axi_interrupts_read(b)                        (MMIO_READ_32(b, INTC_AXI_INTERRUPTS))
#define intc_axi_interrupts_write(b, r)                    (MMIO_WRITE_32(b, INTC_AXI_INTERRUPTS, r))

#define INTC_CORE_TIMER_CTRL(n)                            (0x40 + ((n) * 4))
#define G_INTC_CORE_TIMER_CTRL_V_FIQ(r)                    (((r) >> 7) & 1)
#define G_INTC_CORE_TIMER_CTRL_H_FIQ(r)                    (((r) >> 6) & 1)
#define G_INTC_CORE_TIMER_CTRL_N_FIQ(r)                    (((r) >> 5) & 1)
#define G_INTC_CORE_TIMER_CTRL_S_FIQ(r)                    (((r) >> 4) & 1)
#define G_INTC_CORE_TIMER_CTRL_V_IRQ(r)                    (((r) >> 3) & 1)
#define G_INTC_CORE_TIMER_CTRL_H_IRQ(r)                    (((r) >> 2) & 1)
#define G_INTC_CORE_TIMER_CTRL_N_IRQ(r)                    (((r) >> 1) & 1)
#define G_INTC_CORE_TIMER_CTRL_S_IRQ(r)                    ((r) & 1)
#define S_INTC_CORE_TIMER_CTRL_V_FIQ                       (1 << 7)
#define S_INTC_CORE_TIMER_CTRL_H_FIQ                       (1 << 6)
#define S_INTC_CORE_TIMER_CTRL_N_FIQ                       (1 << 5)
#define S_INTC_CORE_TIMER_CTRL_S_FIQ                       (1 << 4)
#define S_INTC_CORE_TIMER_CTRL_V_IRQ                       (1 << 3)
#define S_INTC_CORE_TIMER_CTRL_H_IRQ                       (1 << 2)
#define S_INTC_CORE_TIMER_CTRL_N_IRQ                       (1 << 1)
#define S_INTC_CORE_TIMER_CTRL_S_IRQ                       (1)
#define intc_core_timer_ctrl_read(b, n)                    (MMIO_READ_32(b, INTC_CORE_TIMER_CTRL(n)))
#define intc_core_timer_ctrl_write(b, n, r)                (MMIO_WRITE_32(b, INTC_CORE_TIMER_CTRL(n), r))

#define INTC_CORE_MAILBOX_CTRL(n)                          (0x50 + ((n) * 4))
#define G_INTC_CORE_MAILBOX_CTRL_3_FIQ(r)                  (((r) >> 7) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_2_FIQ(r)                  (((r) >> 6) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_1_FIQ(r)                  (((r) >> 5) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_0_FIQ(r)                  (((r) >> 4) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_3_IRQ(r)                  (((r) >> 3) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_2_IRQ(r)                  (((r) >> 2) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_1_IRQ(r)                  (((r) >> 1) & 1)
#define G_INTC_CORE_MAILBOX_CTRL_0_IRQ(r)                  ((r) & 1)
#define S_INTC_CORE_MAILBOX_CTRL_3_FIQ                     (1 << 7)
#define S_INTC_CORE_MAILBOX_CTRL_2_FIQ                     (1 << 6)
#define S_INTC_CORE_MAILBOX_CTRL_1_FIQ                     (1 << 5)
#define S_INTC_CORE_MAILBOX_CTRL_0_FIQ                     (1 << 4)
#define S_INTC_CORE_MAILBOX_CTRL_3_IRQ                     (1 << 3)
#define S_INTC_CORE_MAILBOX_CTRL_2_IRQ                     (1 << 2)
#define S_INTC_CORE_MAILBOX_CTRL_1_IRQ                     (1 << 1)
#define S_INTC_CORE_MAILBOX_CTRL_0_IRQ                     (1)
#define intc_core_mailbox_ctrl_read(b, n)                  (MMIO_READ_32(b, INTC_CORE_MAILBOX_CTRL(n)))
#define intc_core_mailbox_ctrl_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX_CTRL(n), r))

#define INTC_CORE_INTERRUPT_SOURCE(n)                      (0x60 + ((n) * 4))
#define G_INTC_CORE_INTERRUPT_SOURCE_LOCAL_TIMER(r)        (((r) >> 11) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_AXI(r)                (((r) >> 10) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_PMU(r)                (((r) >> 9) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_GPU(r)                (((r) >> 8) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_MAILBOX3(r)           (((r) >> 7) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_MAILBOX2(r)           (((r) >> 6) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_MAILBOX1(r)           (((r) >> 5) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_MAILBOX0(r)           (((r) >> 4) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_VTIMER(r)             (((r) >> 3) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_HTIMER(r)             (((r) >> 2) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_NTIMER(r)             (((r) >> 1) & 1)
#define G_INTC_CORE_INTERRUPT_SOURCE_STIMER(r)             ((r) & 1)
#define intc_core_interrupt_source_read(b, n)              (MMIO_READ_32(b, INTC_CORE_INTERRUPT_SOURCE(n)))

#define INTC_CORE_FAST_INTERRUPT_SOURCE(n)                 (0x70 + ((n) * 4))
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_LOCAL_TIMER(r)   (((r) >> 11) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_AXI(r)           (((r) >> 10) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_PMU(r)           (((r) >> 9) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_GPU(r)           (((r) >> 8) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_MAILBOX3(r)      (((r) >> 7) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_MAILBOX2(r)      (((r) >> 6) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_MAILBOX1(r)      (((r) >> 5) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_MAILBOX0(r)      (((r) >> 4) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_VTIMER(r)        (((r) >> 3) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_HTIMER(r)        (((r) >> 2) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_NTIMER(r)        (((r) >> 1) & 1)
#define G_INTC_CORE_FAST_INTERRUPT_SOURCE_STIMER(r)        ((r) & 1)
#define intc_core_fast_interrupt_source_read(b, n)         (MMIO_READ_32(b, INTC_CORE_FAST_INTERRUPT_SOURCE(n)))

#define INTC_CORE_MAILBOX0_SET(n)                          (0x80 + ((n) * 0x10))
#define intc_core_mailbox0_set_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX0_SET(n), r)

#define INTC_CORE_MAILBOX1_SET(n)                          (0x84 + ((n) * 0x10))
#define intc_core_mailbox1_set_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX1_SET(n), r)

#define INTC_CORE_MAILBOX2_SET(n)                          (0x88 + ((n) * 0x10))
#define intc_core_mailbox2_set_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX2_SET(n), r)

#define INTC_CORE_MAILBOX3_SET(n)                          (0x8C + ((n) * 0x10))
#define intc_core_mailbox3_set_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX3_SET(n), r)

#define INTC_CORE_MAILBOX0_CLR(n)                          (0xC0 + ((n) * 0x10))
#define intc_core_mailbox0_clr_read(b, n)                  (MMIO_READ_32(b, INTC_CORE_MAILBOX0_CLR(n)))
#define intc_core_mailbox0_clr_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX0_CLR(n), r)

#define INTC_CORE_MAILBOX1_CLR(n)                          (0xC4 + ((n) * 0x10))
#define intc_core_mailbox1_clr_read(b, n)                  (MMIO_READ_32(b, INTC_CORE_MAILBOX1_CLR(n)))
#define intc_core_mailbox1_clr_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX1_CLR(n), r)

#define INTC_CORE_MAILBOX2_CLR(n)                          (0xC8 + ((n) * 0x10))
#define intc_core_mailbox2_clr_read(b, n)                  (MMIO_READ_32(b, INTC_CORE_MAILBOX2_CLR(n)))
#define intc_core_mailbox2_clr_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX2_CLR(n), r)

#define INTC_CORE_MAILBOX3_CLR(n)                          (0xCC + ((n) * 0x10))
#define intc_core_mailbox3_clr_read(b, n)                  (MMIO_READ_32(b, INTC_CORE_MAILBOX3_CLR(n)))
#define intc_core_mailbox3_clr_write(b, n, r)              (MMIO_WRITE_32(b, INTC_CORE_MAILBOX3_CLR(n), r)

#endif // _BCM2836_L1_INTC_IF_H_
