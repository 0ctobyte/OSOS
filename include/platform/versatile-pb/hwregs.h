#ifndef __HWREGS_H__
#define __HWREGS_H__

// UART0
// TODO: VBASE shouldn't be hardcoded!
#define R_UART0_PBASE (0x101F1000)
#define R_UART0_VBASE (0xFFFF1000)

#define O_UART0_DR (0x0)
#define R_UART0_DR (R_UART0_VBASE+O_UART0_DR)

#define O_UART0_FR (0x18)
#define R_UART0_FR (R_UART0_VBASE+O_UART0_FR)

// VIC
#define R_VIC_PBASE (0x10140000)
#define R_VIC_VBASE (0xFFFF0000)

#define O_VIC_IRQSTATUS (0x0)
#define R_VIC_IRQSTATUS (R_VIC_VBASE+O_VIC_IRQSTATUS)

#define O_VIC_FIQSTATUS (0x4)
#define R_VIC_FIQSTATUS (R_VIC_VBASE+O_VIC_FIQSTATUS)

#define O_VIC_RAWINTR (0x8)
#define R_VIC_FIQSTATUS (R_VIC_VBASE+O_VIC_FIQSTATUS)

#define O_VIC_INTSELECT (0xC)
#define R_VIC_INTSELECT (R_VIC_VBASE+O_VIC_INTSELECT)

#define O_VIC_INTENABLE (0x10)
#define R_VIC_INTENABLE (R_VIC_VBASE+O_VIC_INTENABLE)

#define O_VIC_INTENCLEAR (0x14)
#define R_VIC_INTENCLEAR (R_VIC_VBASE+O_VIC_INTENCLEAR)

#define O_VIC_SOFTINT (0x18)
#define R_VIC_SOFTINT (R_VIC_VBASE+O_VIC_SOFTINT)

#define O_VIC_SOFTINTCLEAR (0x1C)
#define R_VIC_SOFTINTCLEAR (R_VIC_VBASE+O_VIC_SOFTINTCLEAR)

#define O_VIC_PROTECTION (0x20)
#define R_VIC_PROTECTION (R_VIC_VBASE+O_VIC_PROTECTION)

// SIC
#define R_SIC_PBASE (0x10003000)
#define R_SIC_VBASE (0xFFFF3000)

#define O_SIC_STATUS (0x0)
#define R_SIC_STATUS (R_SIC_VBASE+O_SIC_STATUS)

#define O_SIC_RAWSTAT (0x4)
#define R_SIC_RAWSTAT (R_SIC_VBASE+O_SIC_RAWSTAT)

#define O_SIC_ENABLE (0x8)
#define R_SIC_ENABLE (R_SIC_VBASE+O_SIC_ENABLE)

#define O_SIC_ENCLR (0xC)
#define R_SIC_ENCLR (R_SIC_VBASE+O_SIC_ENCLR)

#define O_SIC_SOFTINTSET (0x10)
#define R_SIC_SOFTINTSET (R_SIC_VBASE+O_SIC_SOFTINTSET)

#define O_SIC_SOFTINTCLR (0x14)
#define R_SIC_SOFTINTCLR (R_SIC_VBASE+O_SIC_SOFTINTCLR)

#define O_SIC_PICENABLE (0x20)
#define R_SIC_PICENABLE (R_SIC_VBASE+O_SIC_PICENABLE)

#define O_SIC_PICENCLR (0x24)
#define R_SIC_PICENCLR (R_SIC_VBASE+O_SIC_PICENCLR)

#endif // __HWREGS_H__

